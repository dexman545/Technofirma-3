# Configuration file

general {
    # If true, max health will be capped at 6 hearts and absorption at 2 hearts per limb. If false, the health cap will be much higher (64 hearts normal and 16 absorption)
    B:capMaxHealth=true

    # Set to true to enable the debuff sounds. Requieres enableDebuffs to be true
    B:enableSoundSystem=true

    # If true, max health is scaled to your hearts, and the config entries get multiplier to match the max health
    B:scaleMaxHealth=false

    ##########################################################################################################
    # damagesystem
    #--------------------------------------------------------------------------------------------------------#
    # Settings regarding the max health of the body's parts. 2 = 1 heart
    ##########################################################################################################

    damagesystem {
        # Min: 2
        # Max: 12
        I:maxHealthBody=6

        # Min: 2
        # Max: 12
        I:maxHealthHead=4

        # Min: 2
        # Max: 12
        I:maxHealthLeftArm=4

        # Min: 2
        # Max: 12
        I:maxHealthLeftFoot=4

        # Min: 2
        # Max: 12
        I:maxHealthLeftLeg=4

        # Min: 2
        # Max: 12
        I:maxHealthRightArm=4

        # Min: 2
        # Max: 12
        I:maxHealthRightFoot=4

        # Min: 2
        # Max: 12
        I:maxHealthRightLeg=4
    }

    ##########################################################################################################
    # overlay
    #--------------------------------------------------------------------------------------------------------#
    # Settings regarding the health overlay when ingame
    ##########################################################################################################

    overlay {
        # If true the HUD will display the health as numbers instead of the "normal" icons
        B:displayHealthAsNumber=false

        # aeskfil
        I:heartThreshold=8

        # A scaling option for the HUD in addition to minecraft's GUI scale
        # Min: 0.20000000298023224
        # Max: 2.0
        D:hudScale=1.0

        # The relative point of the overlay. 0=top+left, 1=top+right, 2=bottom+left, 3=bottom+right
        # Min: 0
        # Max: 3
        I:position=2

        # True if the overlay should be shown, false otherwise
        B:showOverlay=true

        # True if the main health bar should be rendered (Will be average health)
        B:showVanillaHealthBar=false

        # The offset on the x axis
        I:xOffset=0

        # The offset on the y axis
        I:yOffset=1
    }

    ##########################################################################################################
    # externalhealing
    #--------------------------------------------------------------------------------------------------------#
    # Settings regarding external healing system(like vanilla potions or natural regeneration
    ##########################################################################################################

    externalhealing {
        # Allow vanilla's natural regeneration. Requires "allowOtherHealingItems" to be true
        # **WARNING** This sets the gamerule "naturalRegeneration" for all of your worlds internally, so it persists even if you remove the mod
        B:allowNaturalRegeneration=true

        # If false, healing potions and other healing items will have no effect
        B:allowOtherHealingItems=true

        # The value vanilla's natural regeneration will be multiplied with. Has no effect if "allowNaturalRegeneration" is disabled
        # Min: 0.0
        # Max: 20.0
        D:naturalRegenMultiplier=0.5

        # The value external regen will be multiplied with. Has no effect if "allowOtherHealingItems" is disabled
        # Min: 0.0
        # Max: 20.0
        D:otherRegenMultiplier=0.5

        # The total amount of health that will be distributed to all body parts after sleeping
        # Min: 0.0
        # Max: 20.0
        D:sleepHealing=1.0
    }

    ##########################################################################################################
    # debuffs
    #--------------------------------------------------------------------------------------------------------#
    # Enable/Disable specify debuffs on specific body parts
    ##########################################################################################################

    debuffs {

        head {
            B:blindness=true
            B:nausea=true

            ##########################################################################################################
            # blindnessconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different damage taken. Only use this if you know what you are doing.
            ##########################################################################################################

            blindnessconditions {
                # How much damage the user must have taken for the debuff to apply at the mapped length. Must be sorted so the **highest** value comes first. 2 = 1 heart
                # Min: 0.0
                # Max: 10.0
                D:damageTaken <
                    2.0
                    1.0
                 >

                # How long the debuff should stay. If the first condition from the damageTaken config is met, the first value in this list will be taken
                # Min: 0
                # Max: 32767
                I:debuffLength <
                    160
                    80
                 >
            }

            ##########################################################################################################
            # nauseaconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different damage taken. Only use this if you know what you are doing.
            ##########################################################################################################

            nauseaconditions {
                # How much damage the user must have taken for the debuff to apply at the mapped length. Must be sorted so the **highest** value comes first. 2 = 1 heart
                # Min: 0.0
                # Max: 10.0
                D:damageTaken <
                    3.0
                    2.0
                 >

                # How long the debuff should stay. If the first condition from the damageTaken config is met, the first value in this list will be taken
                # Min: 0
                # Max: 32767
                I:debuffLength <
                    320
                    240
                 >
            }

        }

        body {
            B:nausea=true
            B:weakness=true

            ##########################################################################################################
            # nauseaconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different damage taken. Only use this if you know what you are doing.
            ##########################################################################################################

            nauseaconditions {
                # How much damage the user must have taken for the debuff to apply at the mapped length. Must be sorted so the **highest** value comes first. 2 = 1 heart
                # Min: 0.0
                # Max: 10.0
                D:damageTaken <
                    4.0
                    2.0
                 >

                # How long the debuff should stay. If the first condition from the damageTaken config is met, the first value in this list will be taken
                # Min: 0
                # Max: 32767
                I:debuffLength <
                    320
                    160
                 >
            }

            ##########################################################################################################
            # weaknessconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different health left. Only use this if you know what you are doing.
            ##########################################################################################################

            weaknessconditions {
                # How strong the potion effect should stay. If the first condition from the healthPercentageLeft config is met, the first value in this list will be taken
                # Min: 0
                # Max: 127
                I:debuffStrength <
                    2
                    1
                 >

                # How much health the user must have left for the debuff to apply at the mapped length. Must be sorted so the **lowest** value comes first
                # Min: 0.0
                # Max: 1.0
                D:healthPercentageLeft <
                    0.25
                    0.5
                 >
            }

        }

        arms {
            B:mining_fatigue=true

            ##########################################################################################################
            # miningfatigueconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different health left. Only use this if you know what you are doing.
            ##########################################################################################################

            miningfatigueconditions {
                # How strong the potion effect should stay. If the first condition from the healthPercentageLeft config is met, the first value in this list will be taken
                # Min: 0
                # Max: 127
                I:debuffStrength <
                    3
                    2
                    1
                 >

                # How much health the user must have left for the debuff to apply at the mapped length. Must be sorted so the **lowest** value comes first
                # Min: 0.0
                # Max: 1.0
                D:healthPercentageLeft <
                    0.25
                    0.5
                    0.75
                 >
            }

        }

        legsandfeet {
            B:slowness=true

            ##########################################################################################################
            # slownessconditions
            #--------------------------------------------------------------------------------------------------------#
            # Holds the information how the debuff should be applied at different health left. Only use this if you know what you are doing.
            ##########################################################################################################

            slownessconditions {
                # How strong the potion effect should stay. If the first condition from the healthPercentageLeft config is met, the first value in this list will be taken
                # Min: 0
                # Max: 127
                I:debuffStrength <
                    3
                    2
                    1
                 >

                # How much health the user must have left for the debuff to apply at the mapped length. Must be sorted so the **lowest** value comes first
                # Min: 0.0
                # Max: 1.0
                D:healthPercentageLeft <
                    0.3499999940395355
                    0.6000000238418579
                    0.800000011920929
                 >
            }

        }

    }

}


